{"ast":null,"code":"var _jsxFileName = \"/home/sohail/playground/React/DemoApp/App.js\";\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { useDimensions } from '@react-native-community/hooks';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport WelcomeScreen from \"./app/screens/WelcomeScreen\";\nimport ResultScreen from \"./app/screens/ResultScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\n\nif (Platform.OS === 'android') {\n  if (typeof Symbol === 'undefined') {\n    if (Array.prototype['@@iterator'] === undefined) {\n      Array.prototype['@@iterator'] = function () {\n        var _this = this;\n\n        var i = 0;\n        return {\n          next: function next() {\n            return {\n              done: i >= _this.length,\n              value: _this[i++]\n            };\n          }\n        };\n      };\n    }\n  }\n}\n\nexport default function App() {\n  console.log(useDimensions());\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: WelcomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SlotResults\",\n    component: ResultScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/sohail/playground/React/DemoApp/App.js"],"names":["React","useDimensions","WelcomeScreen","ResultScreen","NavigationContainer","createStackNavigator","Stack","Platform","OS","Symbol","Array","prototype","undefined","i","next","done","length","value","App","console","log","styles","StyleSheet","create","container","flex"],"mappings":";AAAA,OAAO,8BAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,+BAA9B;;;;;;;;;;;AAaA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAWA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;AAEA,IAAIE,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIC,KAAK,CAACC,SAAN,CAAgB,YAAhB,MAAkCC,SAAtC,EAAiD;AAC/CF,MAAAA,KAAK,CAACC,SAAN,CAAgB,YAAhB,IAAgC,YAAY;AAAA;;AAC1C,YAAIE,CAAC,GAAG,CAAR;AACA,eAAO;AACLC,UAAAA,IAAI,EAAE;AAAA,mBAAO;AACXC,cAAAA,IAAI,EAAEF,CAAC,IAAI,KAAI,CAACG,MADL;AAEXC,cAAAA,KAAK,EAAE,KAAI,CAACJ,CAAC,EAAF;AAFA,aAAP;AAAA;AADD,SAAP;AAMD,OARD;AASD;AACF;AACF;;AAED,eAAe,SAASK,GAAT,GAAe;AAG5BC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAa,EAAzB;AACA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEC,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,SAAS,EAAEC,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAkBD;AAED,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler';\n// import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { useDimensions } from '@react-native-community/hooks';\nimport {\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  Image,\n  TouchableHighlight,\n  Platform,\n  StatusBar,\n  Button\n} from 'react-native';\nimport WelcomeScreen from './app/screens/WelcomeScreen';\nimport ResultScreen from './app/screens/ResultScreen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n// // symbol polyfills\n// global.Symbol = require('core-js/es/symbol');\n// require('core-js/es/symbol/iterator');\n\n// // collection fn polyfills\n// require('core-js/es/map');\n// require('core-js/es/set');\n// require('core-js/es/array/find');\n\nconst Stack = createStackNavigator();\n\nif (Platform.OS === 'android') {\n  if (typeof Symbol === 'undefined') {\n    if (Array.prototype['@@iterator'] === undefined) {\n      Array.prototype['@@iterator'] = function () {\n        let i = 0;\n        return {\n          next: () => ({\n            done: i >= this.length,\n            value: this[i++],\n          }),\n        };\n      };\n    }\n  }\n}\n\nexport default function App() {\n  // let x;\n  // x.toString();\n  console.log(useDimensions());\n  return (\n    <NavigationContainer>\n      <Stack.Screen\n        name=\"Home\"\n        component={WelcomeScreen}\n      />\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"SlotResults\"\n          component={ResultScreen}\n        />\n\n      </Stack.Navigator>\n      {/* <WelcomeScreen />\n      // <ResultScreen /> */}\n    </NavigationContainer>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n});\n"]},"metadata":{},"sourceType":"module"}